syntax = 'proto3';
package pb;

service AlgorithmAggregate{
    rpc CreateAlgorithm(CreateAlgorithmCommand) returns (Algorithm){}
    rpc GetAlgorithm(GetAlgorithmQuery) returns (Algorithm) {}
    rpc AssociateFile(AssociateFileCommand) returns (Algorithm) {}
}

message CreateAlgorithmCommand{
    Algorithm algorithm = 1;
    int64 createdOn = 2;
    string id = 3;
}

message AssociateFileCommand{
    Algorithm algorithm = 1;
    AlgorithmFile algorithmFile = 2;
}

message GetAlgorithmQuery{
    Algorithm algorithm = 1;
    int64 createdOn = 2;
    string id = 3;
}

message Algorithm{
    string name = 1;
    string version = 2;
    string id = 3;
    string status = 4; 
    repeated string fileIDs = 5;
    repeated string datasetIDs = 6;
}
message AlgorithmFile{
    bytes content = 1;
    string name = 2;
    string filetype = 3;
}
service AlgorithmQueryStore{
    rpc GetAlgorithm(Algorithm) returns (Algorithm) {}
    rpc GetAlgorithms(Algorithm) returns (MultipleAlgorithms) {}
    rpc CreateAlgorithm(Algorithm) returns (Algorithm){}
}

//Events
message AlgorithmCreatedEvent{
    Algorithm algorithm = 1;
    string id = 2;
}
message MultipleAlgorithms{
    repeated Algorithm algorithms = 1;
}
